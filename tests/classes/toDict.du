/**
 * toDict.du
 *
 * Testing the class.toDict() and instance.toDict() method.
 *
 * .toDict() returns the dictionary representation of a class / object.
 */
from UnitTest import UnitTest;


class Test {
    var publicField1 = "a";
    var publicField2 = "b";

    const constant = "dictu";

    methodA() {}
    methodB() {}

    init() {}
}

class Chain1 < Test {}

class Chain2 < Chain1 {}

class TestClassToDict < UnitTest {
    testClassToDict() {
        const test = Test();
        this.assertEquals(test._class.toDict().len(), 3);
        this.assertEquals(test._class.toDict()["public_variables"].len(), 2);
        this.assertEquals(test._class.toDict()["public_methods"].len(), 3);
        this.assertEquals(test._class.toDict()["constants"].get("constant"), "dictu");
    }

    testClassToDictInheritance() {
        const test = Chain2();
        this.assertEquals(test._class.toDict().len(), 3);
        this.assertEquals(test._class.toDict()["public_variables"].len(), 2);
        this.assertEquals(test._class.toDict()["public_methods"].len(), 3);
        this.assertEquals(test._class.toDict()["constants"].get("constant"), "dictu");
    }
}

TestClassToDict().run();
